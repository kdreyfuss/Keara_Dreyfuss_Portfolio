---
title: "Lab 1"
author: "Keara Dreyfuss & Isabella Juara"
date: "2024-01-23"
output: pdf_document
---

1. Data Inspection:
• Load the dataset into R and use 2 or more base R functions to inspect the data.
• Optional: use the names() function. For example:
names(data)=c("City", "Rank", "Sun", "WaterCost",…)

```{r}
df = read.csv("HealthyCities.csv")
names(df)=c("City","Rank","SunHours","Watercost","Obesity","LifeExp","Pollution","Worked","Happiness", "Outdoor", "Takeouts", "GymCost")
names(df)
```
```{r}
str(df)
```
```{r}
summary(df)
```


2. Descriptive Statistics:
• Calculate basic descriptive statistics (mean, median, standard deviation, etc.) for
each numeric variable in the dataset.

```{r}


mean(df$Watercost)
median(df$Watercost)
sd(df$Watercost)

mean(df$LifeExp)
median(df$LifeExp)
sd(df$LifeExp)

mean(df$Happiness)
median(df$Happiness)
sd(df$Happiness)

mean(df$GymCost)
median(df$GymCost)
sd(df$GymCost)

mean(df$Outdoor)
median(df$Outdoor)
sd(df$Outdoor)

mean(df$Takeouts)
median(df$Takeouts)
sd(df$Takeouts)

```

3. Create a Numeric DataFrame:
• Extract all numeric variables from the dataset and create a new DataFrame
containing only these variables.
• Do this twice, once as we did in class and again using ChatGPT.

```{r}

numeric_df = df[,c(4,6,9,12)]
```

```{r}
# Extract columns 4, 6, 9, and 12
selected_columns <- df[, c(4, 6, 9, 12)]

# Convert the selected columns to numeric
numeric_df2 <- as.data.frame(sapply(selected_columns, as.numeric))

# Print or use the new numeric data frame
print(numeric_df2)
```



4. Scatterplot Matrix:
• Create scatterplots for all possible pairs of numeric variables using base R.

```{r}

plot(numeric_df)
```

5. Scatterplot of Interest:
• Which of the scatterplots has the most interesting relationship? Plot the
individual scatterplot and carefully label it.

Happiness and Life Expectancy 
```{r}


plot(df$Happiness, df$LifeExpectancy, xlab = "Happiness",
     ylab="LifeExp", 
     main = "Life Expectancy and Happiness")
```

6. Histograms:
• Create a 2 by 2 set of histograms of 4 numeric variables (your choice). Carefully
label the histograms.
• Do this twice, once as we did in class and again using ChatGPT.

```{r}
par(mfrow=c(2,2))
hist(df$Watercost, xlab = "WaterCost", main = "WaterCost")
hist(df$LifeExp, xlab = "LifeExp", main = "LifeExp")
hist(df$Happiness, xlab = "Happiness", main = "Happiness")
hist(df$GymCost, xlab = "GymCost", 
     main = "GymCost")
```

7. Correlation Analysis:
• Calculate the correlation matrix for the numeric variables using the cor()
function.
• Interpret the correlations between different variables. Discuss any strong positive
or negative correlations you find.

```{r}
cor(numeric_df)

```
Happiness and Water cost have a very high positive correlation, so as Water Cost goes up so does Happiness. Happiness and Gym cost have a low postiive correlation. 

8. Boxplots Creation:
• Create a 2 by 2 set of boxplots for 4 numeric variables (your choice) to visually
inspect their distribution and identify any outliers.

```{r}
par(mfrow=c(2,2))
boxplot(df$Watercost, xlab = "WaterCost", main = "WaterCost")
boxplot(df$LifeExp, xlab = "LifeExp", main = "LifeExp")
boxplot(df$Happiness, xlab = "Happiness", main = "Happiness")
boxplot(df$GymCost, xlab = "GymCost", 
     main = "GymCost")
```

9. Other Graphs:
• Create an exceptional plot using a method of your choice.

```{r}

par(mfrow=c(2,2))
scatter.smooth(df$Watercost, xlab = "WaterCost", main = "WaterCost")

```

10. Insights:
• List 3 important insights that you learned from this dataset.

Happiness and water cost are highly related. Happiness and Gym cost are not highly correlated. Life expectancy and Happiness are modertely correlated. 
